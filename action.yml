name: Setup Yampl
description: GitHub Action to install Yampl during CI/CD.
inputs:
  token:
    description: GitHub token
    default: ${{ github.token }}
  version:
    description: The Yampl version to install
    default: latest
outputs:
  version:
    description: The Yampl version that was installed
    value: ${{ steps.install.outputs.version }}
runs:
  using: composite
  steps:
    - id: install
      name: Install Yampl
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        VERSION: ${{ inputs.version }}
      run: |
        set -euo pipefail

        if [[ "$VERSION" == latest ]]; then
          VERSION=
        fi

        case "${{ runner.os }}" in
          Linux)
            OS=linux
            FILENAME=yampl
            ;;
          macOS)
            OS=darwin
            FILENAME=yampl
            ;;
          Windows)
            OS=windows
            FILENAME=yampl.exe
            ;;
        esac

        RELEASE="$(gh release view --repo=clevyr/yampl --json=name,assets $VERSION)"
        VERSION="$(jq -r '.name' <<<"$RELEASE")"
        echo "version=$VERSION" >>$GITHUB_OUTPUT
        echo "Installing yampl $VERSION..."

        DEST="$RUNNER_TEMP/yampl"
        URL="$(jq -r --arg OS "$OS" \
          '.assets[] | select(.name | ascii_downcase | test($OS + "_(amd64|x86_64).(tar.gz|zip)$")) | .url' \
          <<<"$RELEASE" \
        )"

        echo "Downloading $URL"
        mkdir -p "$DEST"
        cd "$DEST"
        if [[ "$URL" == *.tar.gz ]]; then
          curl -sfL "$URL" \
            | tar -xzf - "$FILENAME"
        elif [[ "$URL" == *.zip ]]; then
          curl -sfL -o app.zip "$URL"
          unzip app.zip "$FILENAME"
          mv "$FILENAME" "$DEST"
          rm app.zip
        fi
        echo "$DEST" >>$GITHUB_PATH
